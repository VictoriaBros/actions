name: build image - ver. 2
description: build docker image
inputs:
  dev-image-name:
    description: Generic build image name
    required: true
  prod-image-name:
    description: Amazon ECR build image name
    required: true
  release-image-name:
    description: Amazon ECR build image name
    required: true
  feature-image-name:
    description: Amazon ECR build image name
    required: true
  service-directory:
    description: the service directory
    required: false
    default: .
  build-command:
    description: The build command to use (e.g., "npm run docker:build" or "npm run docker:build:staging")
    required: false
    default: "npm run docker:build"
runs:
  using: composite
  steps:
    - id: build-image
      shell: bash
      env:
        DEV_IMAGE: ${{ inputs.dev-image-name }}
        PROD_IMAGE: ${{ inputs.prod-image-name }}
        RELEASE_IMAGE: ${{ inputs.release-image-name }}
        FEATURE_IMAGE: ${{ inputs.feature-image-name }}
        REF: ${{ github.ref }}
        BUILD_COMMAND: ${{ inputs.build-command }}
      working-directory: ${{ inputs.service-directory }}
      run: |
        BUILD_COMMAND=${BUILD_COMMAND:-"npm run docker:build"}

        if [ "$REF" == "refs/heads/dev" ]; then
          echo "Building for dev branch: REF is $REF"
          ${BUILD_COMMAND} -- -t ${DEV_IMAGE} -t ${PROD_IMAGE}

        elif [[ "$REF" == refs/pull/* ]]; then
          echo "Building for pull request: REF is $REF"
          ${BUILD_COMMAND} -- -t ${DEV_IMAGE} -t ${PROD_IMAGE}

        elif [[ "$REF" == refs/heads/release/* ]]; then
          echo "Building for release branch: REF is $REF"
          ${BUILD_COMMAND} -- -t ${RELEASE_IMAGE} -t ${PROD_IMAGE}
        
        elif [[ "$REF" == refs/heads/feature/* ]]; then
          echo "Building for feature branch: REF is $REF"
          ${BUILD_COMMAND} -- -t ${FEATURE_IMAGE} -t ${PROD_IMAGE}

        elif [ "$REF" == "refs/heads/main" ]; then
          echo "Building for main branch: REF is $REF"
          ${BUILD_COMMAND} -- -t ${DEV_IMAGE} -t ${PROD_IMAGE}

        else
          IMAGE_TAG=${SERVICE_VERSION}
          PROD_IMAGE=${IMAGE_NAME}:${IMAGE_TAG}
          echo "Branch not recognized. No image built."
          echo "Branch not recognized. REF is $REF. No image built."
        fi
